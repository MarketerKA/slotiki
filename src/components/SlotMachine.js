import React, { useState, useEffect } from 'react';

const symbols = ['üîû', '‚ù§Ô∏è', 'üòò'];

const SlotMachine = () => {
  const [slots, setSlots] = useState([0, 1, 2]); // –ò–Ω–¥–µ–∫—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ—Ç–∞
  const [isSpinning, setIsSpinning] = useState(false);
  const [fadeClass, setFadeClass] = useState(['', '', '']); // –ö–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏

  useEffect(() => {
    let slotInterval;
    if (isSpinning) {
      slotInterval = setInterval(() => {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å fade-in-out –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π —Å–∏–º–≤–æ–ª–æ–≤
        setFadeClass(['fade-in-out', 'fade-in-out', 'fade-in-out']);

        setTimeout(() => {
          setSlots(generateRandomSlots()); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
          setFadeClass(['', '', '']); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
        }, 200); // –í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏ fade-in-out
      }, 400); // –°–∫–æ—Ä–æ—Å—Ç—å —Å–º–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–≤ (400 –º—Å = 0.4 —Å–µ–∫—É–Ω–¥—ã)
    }

    return () => clearInterval(slotInterval);
  }, [isSpinning]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
  const generateRandomSlots = () => {
    // –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 1/3 –≤—ã–ø–∞–¥—É—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    if (Math.random() < 0.33) {
      const randomSymbol = Math.floor(Math.random() * symbols.length);
      return [randomSymbol, randomSymbol, randomSymbol];
    }
    // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    return [
      Math.floor(Math.random() * symbols.length),
      Math.floor(Math.random() * symbols.length),
      Math.floor(Math.random() * symbols.length),
    ];
  };

  const startSpin = () => {
    if (!isSpinning) {
      setIsSpinning(true);
      setTimeout(() => stopSpin(), 4000); // –°–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª–∏—Ç—Å—è 5 —Å–µ–∫—É–Ω–¥
    }
  };

  const stopSpin = () => {
    setIsSpinning(false);
  };

  return (
    <div style={styles.slotContainer}>
      {slots.map((symbolIndex, index) => (
        <div key={index} className={`slot ${fadeClass[index]}`} style={styles.slot}>
          <div style={styles.symbol}>{symbols[symbolIndex]}</div>
        </div>
      ))}
      <button onClick={startSpin} disabled={isSpinning} style={styles.button}>
        Spin
      </button>
    </div>
  );
};

const styles = {
  slotContainer: {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: '50px',
  },
  slot: {
    width: '80px',
    height: '80px',
    margin: '0 5px',
    overflow: 'hidden',
    border: '2px solid #ddd',
    borderRadius: '10px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#fff',
    fontSize: '40px',
    position: 'relative',
  },
  symbol: {
    fontSize: '50px',
    transition: 'transform 0.2s ease-in-out, opacity 0.2s ease-in-out',
    opacity: 1,
  },
  button: {
    padding: '15px 30px',
    fontSize: '18px',
    cursor: 'pointer',
    marginTop: '20px',
    backgroundColor: '#ff4b2b',
    color: '#fff',
    border: 'none',
    borderRadius: '25px',
    backgroundImage: 'linear-gradient(45deg, #ff4b2b, #ff416c)',
    boxShadow: '0 8px 15px rgba(0, 0, 0, 0.1)',
    transition: 'all 0.3s ease',
  },
};

export default SlotMachine;
